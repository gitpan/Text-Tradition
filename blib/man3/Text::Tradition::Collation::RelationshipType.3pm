.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Text::Tradition::Collation::RelationshipType 3"
.TH Text::Tradition::Collation::RelationshipType 3 "2012-10-03" "perl v5.16.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Text::Tradition::Collation::RelationshipType \- describes a syntactic,
semantic, etc. relationship that can be made between two readings
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Text::Tradition is a library for representation and analysis of collated
texts, particularly medieval ones.  A relationship connects two readings
within a collation, usually when they appear in the same place in different
texts.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.SS "new"
.IX Subsection "new"
Creates a new relationship type. Usually called via
\&\f(CW$collation\fR\->register_relationship_type. Options include:
.IP "\(bu" 4
name \- (Required string) The name of this relationship type.
.IP "\(bu" 4
bindlevel \- (Required int) How tightly the relationship binds. A
lower number indicates a closer binding. If A and B are related at
bindlevel 0, and B and C at bindlevel 1, it implies that A and C have the
same relationship as B and C do.
.IP "\(bu" 4
is_weak \- (Default false) Whether this relationship should be
replaced silently by a stronger type if requested. This is used primarily
for the internal 'collated' relationship, only to be used by parsers.
.IP "\(bu" 4
is_colocation \- (Default true) Whether this relationship implies
that the readings in question have parallel locations.
.IP "\(bu" 4
is_transitive \- (Default 1) Whether this relationship type is
transitive \- that is, if A is related to B and C this way, is B necessarily
related to C?
.IP "\(bu" 4
is_generalizable \- (Default is_colocation) Whether this
relationship can have a non-local scope.
.IP "\(bu" 4
use_regular \- (Default is_generalizable) Whether, when a
relationship has a non-local scope, the search should be made on the
regularized form of the reading.
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "name"
.IX Subsection "name"
.SS "bindlevel"
.IX Subsection "bindlevel"
.SS "is_weak"
.IX Subsection "is_weak"
.SS "is_colocation"
.IX Subsection "is_colocation"
.SS "is_transitive"
.IX Subsection "is_transitive"
.SS "is_generalizable"
.IX Subsection "is_generalizable"
.SS "use_regular"
.IX Subsection "use_regular"
See the option descriptions above. All attributes are read-only.
.SH "DEFAULTS"
.IX Header "DEFAULTS"
This package provides the following set of relationships as default:
.SS "orthographic: bindlevel => 0, use_regular => 0"
.IX Subsection "orthographic: bindlevel => 0, use_regular => 0"
The readings are orthographic variants of each other (e.g. upper vs. lower case letters.) If the Morphology plugin is in use, orthographically related readings should regularize to the same string.
.SS "spelling: bindlevel => 1"
.IX Subsection "spelling: bindlevel => 1"
The readings are spelling variations of the same word(s), e.g. 'color' vs. 'colour'.
.SS "punctuation: bindlevel => 2"
.IX Subsection "punctuation: bindlevel => 2"
The readings are both punctuation markers.
.SS "grammatical: bindlevel => 2"
.IX Subsection "grammatical: bindlevel => 2"
The readings are morphological variants of the same root word, e.g. 'was' vs. 'were'.
.SS "lexical: bindlevel => 2"
.IX Subsection "lexical: bindlevel => 2"
The readings have the same morphological function but different root words, e.g. '[they] worked' vs. '[they] played'.
.SS "uncertain: bindlevel => 50, is_transitive => 0, is_generalizable => 0"
.IX Subsection "uncertain: bindlevel => 50, is_transitive => 0, is_generalizable => 0"
The readings are (probably) related, but it is impossible to say for sure how. Useful for when one or both of the readings is itself uncertain.
.SS "transposition: bindlevel => 50, is_colocation => 0"
.IX Subsection "transposition: bindlevel => 50, is_colocation => 0"
The readings are the same (or perhaps close variants), but the position has shifted across witnesses.
.SS "repetition: bindlevel => 50, is_colocation => 0, is_transitive => 0"
.IX Subsection "repetition: bindlevel => 50, is_colocation => 0, is_transitive => 0"
One of the readings is a repetition of the other, e.g. \*(L"pet the cat\*(R" vs. \*(L"pet the the cat\*(R".
.SS "other: bindlevel => 50, is_transitive => 0, is_generalizable => 0"
.IX Subsection "other: bindlevel => 50, is_transitive => 0, is_generalizable => 0"
A catch-all relationship for cases not covered by the other relationship types.
.SS "collated: bindlevel => 50, is_weak => 1, is_generalizable => 0"
.IX Subsection "collated: bindlevel => 50, is_weak => 1, is_generalizable => 0"
For internal use only. Denotes a parallel pair of variant readings as detected by an automatic collator.
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS "regularize( $reading )"
.el .SS "regularize( \f(CW$reading\fP )"
.IX Subsection "regularize( $reading )"
Given a Reading object, return the regular form of the reading text that this
relationship type expects.
